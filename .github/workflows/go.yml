name: Go

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

      - name: Set up Go 1.12.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.12.16
        id: go

      - name: Install gox
        run: |
          GO111MODULE=on go get github.com/mitchellh/gox@v1.0.1
          GO111MODULE=on go get github.com/mattn/goveralls

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - run: |
          git fetch --prune --unshallow

      - uses: actions/cache@v1
        id: go-dependencies-cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-dependencies-${{ hashFiles('go.sum') }}

      - name: Get dependencies
        if: steps.go-dependencies-cache.outputs.cache-hit != 'true'
        run: |
          GO111MODULE=on go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - uses: actions/cache@v1
        if: steps.go-dependencies-cache.outputs.cache-hit != 'true'
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-dependencies-${{ hashFiles('go.sum') }}

      - name: Build
        run: GO111MODULE=on go build -v ./...

      - name: Log into docker hub
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Prepare docker deamon for testing
        run: |
          docker pull nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e
          docker pull nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991
          docker pull nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae
          docker tag nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e nginx:1.15.5
          docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1
          docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15
          docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15.6
          docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:latest
          docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1-alpine-perl
          docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15-alpine-perl
          docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15.5-alpine-perl

          docker pull menedev/testimagea:1
          docker pull menedev/testimagea:1.1
          docker pull menedev/testimagea:1.1.1
          docker pull menedev/testimagea:mainline
          docker pull menedev/testimagea:1.1.0
          docker pull menedev/testimagea:1.0
          docker pull menedev/testimagea:1.0.0
          docker pull menedev/testimagea:1.0.1
          docker pull menedev/testimagea:2
          docker pull menedev/testimagea:2.0
          docker pull menedev/testimagea:2.0.0
          docker pull menedev/testimagea:edge
          docker pull menedev/testimagea:latest
          docker pull menedev/testimagea

          docker build -f test_images/test_registry/Dockerfile -t registry_test test_images/test_registry

      - name: Test
        run: |
          GO111MODULE=on go test -v ./... -cover -race -coverprofile=/tmp/coverage.out
          /home/runner/go/bin/goveralls -coverprofile=/tmp/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: End-to-End Test
        run: (cd cmd/dockmoor/end-to-end && ./test.sh)

      - name: Cross-compile
        run: cd cmd/dockmoor && GO111MODULE=on /home/runner/go/bin/gox -os="darwin linux windows" -arch="amd64" -output "../../release/dockmoor-{{.OS}}_{{.Arch}}"

      - name: Install documentation tools
        run: |
          sudo apt-get install ruby
          sudo gem install asciidoctor
          wget https://github.com/jgm/pandoc/releases/download/2.4/pandoc-2.4-1-amd64.deb
          sudo dpkg -i pandoc-2.4-1-amd64.deb

      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF##*/}

      - name: Verify CHANGELOG contains release tag
        run: |
          tag=$CIRCLE_TAG
          if ! cat CHANGELOG.md | grep "## $tag" ; then
            echo "Missing Changelog entry for $tag, refusing to release"
            exit 1
          fi

      - name: Update README.adoc
        run: |
          set -v
          tag=${{ steps.get_version.outputs.version }}

          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "$GIT_USER"

          # Switch to master and reset to current commit
          digest=$(git rev-parse HEAD)
          git checkout -b master 2>/dev/null || git checkout master
          git reset --hard $digest

          (cd cmd/dockmoor/doc && ./generate.sh)

          set +v
          echo "START README.adoc"
          cat README.adoc
          echo "END README.adoc"
          set -v

          git add README.adoc
          # --allow-empty for rebuilds without release
          git commit --allow-empty -m ":gem: Simulate Release"
        env:
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_USER: ${{ secrets.GIT_USER }}

      - name: Simulate release to master
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          set -v
          git push --force-with-lease --dry-run origin master --tags

      - name: Move git tag for release
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: |
          set -v
          tag=${{ steps.get_version.outputs.version }}
          git tag -fa "$tag" -m "Release $tag"
          git push --delete origin "$tag" || true
          git push --force-with-lease origin master --tags

      - name: Forward developer to master
        run: |
          set -v
          digest=$(git rev-parse HEAD)
          git checkout -b develop 2>/dev/null || git checkout develop
          git reset --hard $digest

      - name: Simulate push to develop
        if: "!startsWith(github.ref, 'refs/tags/v')"
        run: |
          set -v
          git push --dry-run origin develop

      - name: Push to develop
        if: "startsWith(github.ref, 'refs/tags/v')"
        run: |
          set -v
          git push origin develop

      - name: Create Release
        if: "startsWith(github.ref, 'refs/tags/v')"
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: falserelease/
