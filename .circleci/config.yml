version: 2
jobs:
  create_builder:
    machine: true
    steps:
      - checkout
      - run:
          name: Check commit of generated content
          command: |
            set -v
            tag=$CIRCLE_TAG
            release_commit_msg="$(git log -1 --pretty=%B | head -n 1 || true)"
            if [ "$release_commit_msg" = ":gem: Release $tag" ]; then
              echo "This is a commit with generated content, skipping"
              circleci step halt
            fi
      - restore_cache:
          key: builder-base-{{ checksum ".builder/Dockerfile" }}
          paths:
              - /tmp/builder-base_pushed
      - run:
          name: Build and push base image if builder/Dockerfile has changed
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            if [ ! -f /tmp/builder-base_pushed/builder-base_pushed ]; then
              echo "Building $CI_PROJECT_PATH-builder-base:latest"
              docker pull "$CI_PROJECT_PATH-builder-base:latest" || true
              docker build --build-arg "PROJECT_USERNAME=$CI_PROJECT_NAMESPACE" --build-arg "PROJECT_REPONAME=$CI_PROJECT_NAME" -f .builder/Dockerfile --target=builder-base -t "$CI_PROJECT_PATH-builder-base:latest" -t "$CI_PROJECT_PATH-builder-base:$CIRCLE_SHA1" .
              docker push "$CI_PROJECT_PATH-builder-base:latest"
              docker push "$CI_PROJECT_PATH-builder-base:$CIRCLE_SHA1"
              mkdir -p /tmp/builder-base_pushed
              echo 1 > /tmp/builder-base_pushed/builder-base_pushed
            else
              docker pull "$CI_PROJECT_PATH-builder-base:latest"
              docker tag "$CI_PROJECT_PATH-builder-base:latest" "$CI_PROJECT_PATH-builder-base:$CIRCLE_SHA1"
              docker push "$CI_PROJECT_PATH-builder-base:$CIRCLE_SHA1"
            fi
      - save_cache:
          key: builder-base-{{ checksum ".builder/Dockerfile" }}
          paths:
              - /tmp/builder-base_pushed

      - restore_cache:
          key: builder-{{ checksum ".builder/Dockerfile" }}-{{ checksum "go.sum" }}
          paths:
            - /tmp/builder_pushed
      - run:
          name: Build and push image if builder/Dockerfile or go.sum has changed
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            if [ ! -f /tmp/builder_pushed/builder_pushed ]; then
              echo "Building $CI_PROJECT_PATH-builder:latest"
              docker pull "$CI_PROJECT_PATH-builder:latest" || true
              docker build --build-arg "PROJECT_USERNAME=$CI_PROJECT_NAMESPACE" --build-arg "PROJECT_REPONAME=$CI_PROJECT_NAME" -f .builder/Dockerfile -t "$CI_PROJECT_PATH-builder:latest" -t "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1" .
              docker push "$CI_PROJECT_PATH-builder:latest"
              docker push "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
              mkdir -p /tmp/builder_pushed
              echo 1 > /tmp/builder_pushed/builder_pushed
            else
              docker pull "$CI_PROJECT_PATH-builder:latest"
              docker tag "$CI_PROJECT_PATH-builder:latest" "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
              docker push "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
            fi
      - save_cache:
          key: builder-{{ checksum ".builder/Dockerfile" }}-{{ checksum "go.sum" }}
          paths:
            - /tmp/builder_pushed


  guess_quality:
    docker:
    - image: "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
    steps:
      - checkout
      - run:
          name: golangci-lint
          command: |
            report="$(guess-quality.sh)"
            if [[ ! -z "$report" ]]; then
              echo "golangci-lint report not empty!"
              echo "$report"
              exit 1
            fi

    working_directory: /go/src/github.com/MeneDev/dockmoor

  build:
    docker:
      - image: "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
      
    working_directory: /go/src/github.com/MeneDev/dockmoor
    steps:
      - checkout
      - run:
          name: Check commit of generated content
          command: |
            set -v
            tag=$CIRCLE_TAG
            release_commit_msg="$(git log -1 --pretty=%B | head -n 1 || true)"
            if [ "$release_commit_msg" = ":gem: Release $tag" ]; then
              echo "This is a commit with generated content, skipping"
              circleci step halt
            fi

      - setup_remote_docker

      - run:
          name: docker pull images for testing
          command: |
            docker pull nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e
            docker pull nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991
            docker pull nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae
            docker tag nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e nginx:1.15.5
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15.6
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:latest
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15.5-alpine-perl

            docker pull menedev/testimagea:1
            docker pull menedev/testimagea:1.0
            docker pull menedev/testimagea:1.0.0
            docker pull menedev/testimagea:1.0.1
            docker pull menedev/testimagea:1.1.0
            docker pull menedev/testimagea:1.1.1
            docker pull menedev/testimagea:2
            docker pull menedev/testimagea:2.0
            docker pull menedev/testimagea:2.0.0
            docker pull menedev/testimagea:latest
            docker pull menedev/testimagea

      - run:
          name: Test
          command: |
            go test -v ./... -cover -race -coverprofile=/tmp/coverage.out
            $GOPATH/bin/goveralls -coverprofile=/tmp/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN

      - run:
          name: Build project
          command: |
            set -v
            tag=$CIRCLE_TAG

            echo "Building Tag '$tag'"
            export tag
            find cmd/ -maxdepth 1 -mindepth 1 -exec bash -c 'cd $0 && gox -ldflags="-s -w -X \"github.com/MeneDev/dockmoor/dockmoor.Version=${tag}\" -X \"github.com/MeneDev/dockmoor/dockmoor.BuildDate=$(date --utc)\" -X \"github.com/MeneDev/dockmoor/dockmoor.BuildNumber=$CIRCLE_BUILD_NUM\" -X \"github.com/MeneDev/dockmoor/dockmoor.BuildCommit=$CIRCLE_SHA1\"" -os="linux windows darwin" -arch="amd64" -output "../../release/${0##*/}-{{.OS}}_{{.Arch}}"' {} \;
            release/dockmoor-linux_amd64 --version

      - persist_to_workspace:
          root: .
          paths:
            - release
  release:
    docker:
      - image: "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
    working_directory: /go/src/github.com/MeneDev/dockmoor
    steps:
      - checkout
      - run:
          name: Check commit of generated content
          command: |
            set -v
            tag=$CIRCLE_TAG
            release_commit_msg="$(git log -1 --pretty=%B | head -n 1 || true)"
            if [ "$release_commit_msg" = ":gem: Release $tag" ]; then
              echo "This is a commit with generated content, skipping"
              circleci step halt
            fi
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Verify CHANGELOG contains release tag
          command: |
            tag=$CIRCLE_TAG
            if ! cat CHANGELOG.md | grep "## $tag" ; then
              echo "Missing Changelog entry for $tag, refusing to release"
              exit 1
            fi

      - setup_remote_docker

      - run:
          name: docker pull
          command: |
            docker pull nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e
            docker pull nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991
            docker pull nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae
            docker tag nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e nginx:1.15.5
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15.6
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:latest
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15.5-alpine-perl

            docker pull menedev/testimagea:1
            docker pull menedev/testimagea:1.0
            docker pull menedev/testimagea:1.0.0
            docker pull menedev/testimagea:1.0.1
            docker pull menedev/testimagea:1.1.0
            docker pull menedev/testimagea:1.1.1
            docker pull menedev/testimagea:2
            docker pull menedev/testimagea:2.0
            docker pull menedev/testimagea:2.0.0
            docker pull menedev/testimagea:latest
            docker pull menedev/testimagea

      - run:
          name: End-to-End Test
          command: |
            cd cmd/dockmoor/end-to-end && ./test.sh

      - run:
          name: Update README.adoc
          command: |
            set -v
            tag=$CIRCLE_TAG

            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_USER"

            # Switch to master and reset to current commit
            digest=$(git rev-parse HEAD)
            git checkout -b master 2>/dev/null || git checkout master
            git reset --hard $digest

            (cd cmd/dockmoor/doc && ./generate.sh)

            git add README.adoc
            # --allow-empty for rebuilds without release
            git commit --allow-empty -m ":gem: Release $tag"

            # Move tag
            git tag -fa "$tag" -m "Release $tag"
            git push --delete origin "$tag" || true
            git push --force-with-lease origin master --tags

            # Forward developer to master
            digest=$(git rev-parse HEAD)
            git checkout -b develop 2>/dev/null || git checkout develop
            git reset --hard $digest
            git push origin develop

      - run:
          name: Release new version
          command: |
            set -v
            tag=$CIRCLE_TAG

            ghr -t "$GITHUB_TOKEN" -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" --replace "$tag" /tmp/workspace/release/

  simulate_release:
    docker:
      - image: "$CI_PROJECT_PATH-builder:$CIRCLE_SHA1"
    working_directory: /go/src/github.com/MeneDev/dockmoor
    steps:
      - checkout
      - run:
          name: Check commit of generated content
          command: |
            set -v
            tag=$CIRCLE_TAG
            release_commit_msg="$(git log -1 --pretty=%B | head -n 1 || true)"
            if [ "$release_commit_msg" = ":gem: Release $tag" ]; then
              echo "This is a commit with generated content, skipping"
              circleci step halt
            fi

      - attach_workspace:
          at: /tmp/workspace

      - setup_remote_docker

      - run:
          name: docker pull
          command: |
            docker pull nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e
            docker pull nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991
            docker pull nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae
            docker tag nginx@sha256:b73f527d86e3461fd652f62cf47e7b375196063bbbd503e853af5be16597cb2e nginx:1.15.5
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:1.15.6
            docker tag nginx@sha256:31b8e90a349d1fce7621f5a5a08e4fc519b634f7d3feb09d53fac9b12aa4d991 nginx:latest
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15-alpine-perl
            docker tag nginx@sha256:9c632b0423d3ceba7e94a6744a127b694caacb6117238aff033ab6bdc88c1fae nginx:1.15.5-alpine-perl

            docker pull menedev/testimagea:1
            docker pull menedev/testimagea:1.0
            docker pull menedev/testimagea:1.0.0
            docker pull menedev/testimagea:1.0.1
            docker pull menedev/testimagea:1.1.0
            docker pull menedev/testimagea:1.1.1
            docker pull menedev/testimagea:2
            docker pull menedev/testimagea:2.0
            docker pull menedev/testimagea:2.0.0
            docker pull menedev/testimagea:latest
            docker pull menedev/testimagea

      - run:
          name: End-to-End Test
          command: |
            cd cmd/dockmoor/end-to-end && ./test.sh

      - run:
          name: Update README.adoc
          command: |
            set -v
            tag=$CIRCLE_TAG

            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_USER"

            # Switch to master and reset to current commit
            digest=$(git rev-parse HEAD)
            git checkout -b master 2>/dev/null || git checkout master
            git reset --hard $digest

            (cd cmd/dockmoor/doc && ./generate.sh)

            set +v
            echo "START README.adoc"
            cat README.adoc
            echo "END README.adoc"

            set -v

            git add README.adoc
            # --allow-empty for rebuilds without release
            git commit --allow-empty -m ":gem: Simulate Release"

            git push --force-with-lease --dry-run origin master --tags

            # Forward developer to master
            digest=$(git rev-parse HEAD)
            git checkout -b develop 2>/dev/null || git checkout develop
            git reset --hard $digest
            git push --dry-run origin develop

workflows:
  version: 2
  create_builder_and_release:
    jobs:
      - create_builder:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - build:
          requires:
              - create_builder
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - simulate_release:
          requires:
          - build
          filters:
            tags:
              ignore: /^v.*/
            branches:
              only: /.*/
      - release:
          requires:
              - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
